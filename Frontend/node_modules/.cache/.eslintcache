[{"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\index.js":"1","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\App.js":"2","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\reportWebVitals.js":"3","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Navbar.jsx":"4","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\KanbanBoard\\KanbanBoard.jsx":"5","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Component\\TaskBoard.jsx":"6","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Component\\CreatePopup.jsx":"7","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Component\\EditTaskPopup.jsx":"8"},{"size":513,"mtime":1658488898000,"results":"9","hashOfConfig":"10"},{"size":219,"mtime":1658489330000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":383,"mtime":1658562756000,"results":"13","hashOfConfig":"10"},{"size":3300,"mtime":1658673938000,"results":"14","hashOfConfig":"10"},{"size":952,"mtime":1658662010000,"results":"15","hashOfConfig":"10"},{"size":3273,"mtime":1658685202666,"results":"16","hashOfConfig":"10"},{"size":3498,"mtime":1658685111908,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j4781d",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\index.js",[],[],"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\App.js",[],[],"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\reportWebVitals.js",[],[],"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Navbar.jsx",[],[],"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\KanbanBoard\\KanbanBoard.jsx",[],[],"G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Component\\TaskBoard.jsx",["45"],[],"import './TaskBoard.css'\r\nimport {KeyboardArrowUp,Edit} from \"@material-ui/icons\";\r\nimport EditTaskPopup from './EditTaskPopup';\r\n\r\n\r\n\r\nexport default function TaskBoard({title,desc,status,storyPoint,priority,id,getTasks}) {\r\n  console.log(id);\r\n\r\n  return (\r\n\r\n    <div className='TaskBoard'>\r\n       <div  style={{}}>\r\n           <p style={{float:\"right\",cursor:\"pointer\"}}><EditTaskPopup title={title} getTasks={getTasks} desc={desc} priority={priority} id={id} storyPoint={storyPoint} status={status} style={{color:\"lightgray\"}} /></p> \r\n           <p  className='Title'>{title} </p> \r\n           \r\n       </div>\r\n       <span className='Desc'>{desc}</span>\r\n       <div className='bottomContainer'>\r\n            <KeyboardArrowUp style={{marginLeft:\"70%\",color:`${(priority==='P1'||priority==='P2')?\"red\":\"green\"}`} } /><span>{priority}</span>\r\n            <button className='button'>{storyPoint}</button>\r\n       </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Component\\CreatePopup.jsx",["46"],[],"import React, { useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport \"./CreatePopup.css\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default ({getTasks}) => {\r\n  \r\n     const [Title,setTitle]=useState(\"\");\r\n     const [Desc,setDesc]=useState(\"\");\r\n     const [Status,setStatus]=useState(\"\");\r\n     const [Priority,setPriority]=useState(\"\");\r\n     const [StoryPoint,setStoryPoint]=useState(\"\");\r\n\r\n     const handleClick =async (e)=>{\r\n        const resData=await axios.post(\"http://localhost:3005/api/tasks\",{Title:Title,Desc:Desc,Status:Status,Priority:Priority,StoryPoint:StoryPoint},(res,data)=>{\r\n\r\n        });\r\n        console.log(resData);\r\n        getTasks();\r\n     };\r\n  \r\n  return(\r\n    <Popup\r\n     trigger={<button className='kanbanButton'>Create</button>}\r\n     modal\r\n     nested\r\n     >\r\n     {close => (\r\n       \r\n       <div className=\"modal\">\r\n         <button className=\"close\" onClick={close}>\r\n           &times;\r\n         </button>\r\n         \r\n         <div className=\"content\">\r\n               <input className='Title' required type=\"text\" name=\"Title\" value={Title} onChange={e=>{ setTitle(e.target.value);} } />\r\n             <div className='Container'>\r\n                 <div className='left'>\r\n                     <span>Description</span>\r\n                     <div className='leftInner'>\r\n                         <input type=\"text\" required  name=\"Desc\" value={Desc} onChange={e=>{ setDesc(e.target.value);} }/>\r\n                     </div>\r\n                 </div>\r\n                 \r\n                 <div className='right'>\r\n                     \r\n                     <span>Status</span> <br/>\r\n                     <select name=\"Status\"  onChange={e=>{ setStatus(e.target.value);} }>\r\n                         <option>select</option>\r\n                         <option value=\"NotCompleted\">Not Started</option>\r\n                         <option value=\"InProgress\">In Progress</option>\r\n                         <option value=\"completed\">Completed</option>\r\n                     </select><br/>\r\n                     <span>Priority</span><br/>\r\n                     <select name=\"Priority\"  required onChange={e=>{ setPriority(e.target.value);} }>\r\n                         <option>select</option>\r\n                         <option value=\"P1\">P1</option>\r\n                         <option value=\"P2\">P2</option>\r\n                         <option value=\"P3\">P3</option>\r\n                         <option value=\"P4\">P4</option>\r\n                     </select> <br/>\r\n                     <span>Story point</span><br/>\r\n                     <input type=\"number\" required name=\"point\" value={StoryPoint} onChange={e=>{ setStoryPoint(e.target.value);} } />\r\n \r\n                 </div>\r\n             </div>\r\n         </div>\r\n         <div className=\"actions\">\r\n           \r\n           <button\r\n             className=\"button\"\r\n             onClick={() => {\r\n               console.log('modal closed ');\r\n               close();\r\n             }}\r\n           >\r\n             cancel\r\n           </button>\r\n           <button className='kanbanButton' type='submit' onClick={()=>{\r\n               handleClick();\r\n               close();\r\n           }}>Save</button>\r\n         </div>\r\n       </div>\r\n     )}\r\n   </Popup>\r\n\r\n     );\r\n    \r\n};","G:\\Coding Ninja\\Kanban\\Kanban\\Frontend\\src\\Component\\EditTaskPopup.jsx",["47"],[],"import React, { useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport \"./CreatePopup.css\";\r\nimport axios from 'axios';\r\nimport {Edit} from \"@material-ui/icons\";\r\n\r\nexport default ({title,desc,status,storyPoint,priority,id,getTasks}) => {\r\n     const [Title,setTitle]=useState(title);\r\n     const [Desc,setDesc]=useState(desc);\r\n     const [Status,setStatus]=useState(status);\r\n     const [Priority,setPriority]=useState(priority);\r\n     const [StoryPoint,setStoryPoint]=useState(storyPoint);\r\n\r\n    \r\n     //console.log(\"huih\");\r\n     const handleClick =async (e)=>{\r\n      \r\n      await axios.put(\"http://localhost:3005/api/update/tasks\",{Title:Title,Desc:Desc,Status:Status,Priority:Priority,StoryPoint:StoryPoint,id:id},(res,data)=>{\r\n            res.send(data);\r\n        });\r\n      //  console.log(resData);\r\n      getTasks();\r\n     };\r\n  \r\n  return(\r\n    <Popup\r\n     trigger={<Edit style={{color:\"gray\"}} />}\r\n     modal\r\n     nested\r\n     >\r\n     {close => (\r\n       \r\n       <div className=\"modal\">\r\n         <button className=\"close\" onClick={close}>\r\n           &times;\r\n         </button>\r\n         \r\n         <div className=\"content\">\r\n                <h2>Edit Ticket</h2>\r\n                <label style={{color:\"gray\"}} >Title</label>\r\n               <input className='Title' type=\"text\" name=\"Title\" value={Title} onChange={e=>{ setTitle(e.target.value);} } />\r\n             <div className='Container'>\r\n                 <div className='left'>\r\n                     <span>Description</span>\r\n                     <div className='leftInner'>\r\n                         <input type=\"text\"  name=\"Desc\" value={Desc} onChange={e=>{ setDesc(e.target.value);} }/>\r\n                     </div>\r\n                 </div>\r\n                 \r\n                 <div className='right'>\r\n                     \r\n                     <span>Status</span> <br/>\r\n                     \r\n                     <select name=\"Status\"  onChange={e=>{ setStatus(e.target.value);} }>\r\n                         <option>select</option>\r\n                         <option value=\"NotCompleted\">Not Started</option>\r\n                         <option value=\"InProgress\">In Progress</option>\r\n                         <option value=\"completed\">Completed</option>\r\n                     </select><br/>\r\n                     <span>Priority</span><br/>\r\n                     <select name=\"Priority\"  onChange={e=>{ setPriority(e.target.value);} }>\r\n                         <option>select</option>\r\n                         <option value=\"P1\">P1</option>\r\n                         <option value=\"P2\">P2</option>\r\n                         <option value=\"P3\">P3</option>\r\n                         <option value=\"P4\">P4</option>\r\n                     </select> <br/>\r\n                     <span>Story point</span><br/>\r\n                     <input type=\"number\" name=\"point\" value={StoryPoint} onChange={e=>{ setStoryPoint(e.target.value);} } />\r\n \r\n                 </div>\r\n             </div>\r\n         </div>\r\n         <div className=\"actions\">\r\n           \r\n           <button\r\n             className=\"button\"\r\n             onClick={() => {\r\n               console.log('modal closed ');\r\n               close();\r\n             }}\r\n           >\r\n             cancel\r\n           </button>\r\n           <button className='kanbanButton' onClick={()=>{\r\n                handleClick();\r\n                close();\r\n           }} >Save</button>\r\n         </div>\r\n       </div>\r\n     )}\r\n   </Popup>\r\n\r\n     );\r\n    \r\n};",{"ruleId":"48","severity":1,"message":"49","line":2,"column":25,"nodeType":"50","messageId":"51","endLine":2,"endColumn":29},{"ruleId":"52","severity":1,"message":"53","line":7,"column":1,"nodeType":"54","endLine":91,"endColumn":3},{"ruleId":"52","severity":1,"message":"53","line":7,"column":1,"nodeType":"54","endLine":96,"endColumn":3},"no-unused-vars","'Edit' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]